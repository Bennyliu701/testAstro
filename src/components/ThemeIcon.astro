---
---
<main>
  <button id="themeToggle">
    <svg width="30px" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">
      <path class="sun" fill-rule="evenodd" d="M12 17.5a5.5 5.5 0 1 0 0-11 5.5 5.5 0 0 0 0 11zm0 1.5a7 7 0 1 0 0-14 7 7 0 0 0 0 14zm12-7a.8.8 0 0 1-.8.8h-2.4a.8.8 0 0 1 0-1.6h2.4a.8.8 0 0 1 .8.8zM4 12a.8.8 0 0 1-.8.8H.8a.8.8 0 0 1 0-1.6h2.5a.8.8 0 0 1 .8.8zm16.5-8.5a.8.8 0 0 1 0 1l-1.8 1.8a.8.8 0 0 1-1-1l1.7-1.8a.8.8 0 0 1 1 0zM6.3 17.7a.8.8 0 0 1 0 1l-1.7 1.8a.8.8 0 1 1-1-1l1.7-1.8a.8.8 0 0 1 1 0zM12 0a.8.8 0 0 1 .8.8v2.5a.8.8 0 0 1-1.6 0V.8A.8.8 0 0 1 12 0zm0 20a.8.8 0 0 1 .8.8v2.4a.8.8 0 0 1-1.6 0v-2.4a.8.8 0 0 1 .8-.8zM3.5 3.5a.8.8 0 0 1 1 0l1.8 1.8a.8.8 0 1 1-1 1L3.5 4.6a.8.8 0 0 1 0-1zm14.2 14.2a.8.8 0 0 1 1 0l1.8 1.7a.8.8 0 0 1-1 1l-1.8-1.7a.8.8 0 0 1 0-1z"/>
      <path class="moon" fill-rule="evenodd" d="M16.5 6A10.5 10.5 0 0 1 4.7 16.4 8.5 8.5 0 1 0 16.4 4.7l.1 1.3zm-1.7-2a9 9 0 0 1 .2 2 9 9 0 0 1-11 8.8 9.4 9.4 0 0 1-.8-.3c-.4 0-.8.3-.7.7a10 10 0 0 0 .3.8 10 10 0 0 0 9.2 6 10 10 0 0 0 4-19.2 9.7 9.7 0 0 0-.9-.3c-.3-.1-.7.3-.6.7a9 9 0 0 1 .3.8z"/>
    </svg>
    主题切换
  </button>
</main>

<style>
  #themeToggle {
    border: 0;
    background: none;
    cursor: pointer;
    color: #fff;
  }
  .sun { fill: black; }
  .moon { fill: white; }

  :global(.dark) .sun { fill: transparent; }
  :global(.dark) .moon { fill: white; }
</style>

<!-- 为了在导航过程的早期检查并在必要时设置深色模式，请创建一个函数，该函数将在 astro:after-swap 事件发生时运行。下面的函数将会在新页面替代旧页面之后立即运行，在 DOM 元素被绘制到屏幕上之前。该函数将检查浏览器的 localStorage 以确定是否使用深色主题 -->
<script>
  document.addEventListener('astro:after-swap', () => {
    console.log('astro:after-swap', localStorage)
    localStorage.theme === 'dark'
    ? document.documentElement.classList.add("dark")
    : document.documentElement.classList.add("light");
  });
</script>

<!-- 控制浅色/深色主题的脚本位于 <ThemeIcon /> 组件中。为了确保主题切换器在每个页面上能够正常工作，请从脚本中移除 is:inline 属性，并添加与前面示例中相同的事件监听器，以便 astro:page-load 事件可以触发你现有的函数。

更新现有的 <script> 标签，使你的函数在 astro:page-load 事件发生时运行，确保在新页面完全加载并对用户可见后主题切换器可用 -->
<script is:inline>
  document.addEventListener('astro:page-load', () => {
  const themeToggle = document.getElementById('themeToggle');
  console.log('themeToggle', themeToggle)
  const theme = (() => {
    if (typeof localStorage !== 'undefined' && localStorage.getItem('theme')) {
      return localStorage.getItem('theme');
    }
    if (window.matchMedia('(prefers-color-scheme: dark)').matches) {
      return 'dark';
    }
      return 'light';
  })();

  if (theme === 'light') {
    document.documentElement.classList.remove('dark');
  } else {
    document.documentElement.classList.add('dark');
  }

  window.localStorage.setItem('theme', theme);

  const handleToggleClick = () => {
    console.log('handleToggleClick', 1)
    const element = document.documentElement;
    element.classList.toggle("dark");

    const isDark = element.classList.contains("dark");
    console.log('isDark', isDark)
    localStorage.setItem("theme", isDark ? "dark" : "light");
  }

  themeToggle.addEventListener("click", handleToggleClick);
  });
</script>
