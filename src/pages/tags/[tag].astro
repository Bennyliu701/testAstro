---
import Layout from '../../layouts/Layout.astro';
import BlogPost from '../../components/BlogPost.astro';

// 动态页面路由-动态创建页面
// 如果需要构建页面路由的信息，请将其编写在 getStaticPaths() 内部。
// 要在页面路由的 HTML 模板中接收信息，请将其编写在 getStaticPaths() 外部。
export async function getStaticPaths() {
  const allPosts = await Astro.glob('../posts/*.md');
  const uniqueTags = [...new Set(allPosts.map((post) => post.frontmatter.tags).flat())];
  console.log('uniqueTags', uniqueTags)
  // return [
  //   {params: {tag: "astro"}, props: {posts: allPosts}},
  //   {params: {tag: "successes"}, props: {posts: allPosts}},
  //   {params: {tag: "community"}, props: {posts: allPosts}},
  //   {params: {tag: "blogging"}, props: {posts: allPosts}},
  //   {params: {tag: "setbacks"}, props: {posts: allPosts}},
  //   {params: {tag: "learning in public"}, props: {posts: allPosts}}
  // ]

  return uniqueTags.map((tag) => {
    const filteredPosts = allPosts.filter((post) => post.frontmatter.tags.includes(tag));
    return {
      params: { tag },
      props: { posts: filteredPosts },
    };
  });
}

const { tag } = Astro.params;
const { posts } = Astro.props;
// const filteredPosts = posts.filter(post => post.frontmatter.tags?.includes(tag));
---
<Layout title={tag}>
  <main>
    <p>包含「{tag}」标签的文章</p>
    <ul>
      {posts.map((post) => <BlogPost url={post.url} title={post.frontmatter.title}/>)}
    </ul>
  </main>
</Layout>
